@page "/applications/details"
@inject OmarOgailiSkolan.Data.OmarOgailiSkolanContext DB
@using OmarOgailiSkolan
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Application</h4>
    <hr />
    @if (application is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@application.Name</dd>
            <dt class="col-sm-2">Dateofbirth</dt>
            <dd class="col-sm-10">@application.Dateofbirth</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@application.Email</dd>
            <dt class="col-sm-2">Age</dt>
            <dd class="col-sm-10">@application.Age</dd>
        </dl>
        <div>
            <a href="@($"/applications/edit?id={application.Id}")">Edit</a> |
            <a href="@($"/applications")">Back to List</a>
        </div>
    }
</div>

@code {
    Application? application;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        application = await DB.Application.FirstOrDefaultAsync(m => m.Id == Id);

        if (application is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
