@page "/applications/delete"
@inject OmarOgailiSkolan.Data.OmarOgailiSkolanContext DB
@using OmarOgailiSkolan
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Application</h4>
    <hr />
    @if (application is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@application.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Dateofbirth</dt>
            <dd class="col-sm-10">@application.Dateofbirth</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@application.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Age</dt>
            <dd class="col-sm-10">@application.Age</dd>
        </dl>
        <EditForm method="post" Model="application" OnValidSubmit="DeleteApplication" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(application is null)">Delete</button> |
            <a href="/applications">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Application? application;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        application = await DB.Application.FirstOrDefaultAsync(m => m.Id == Id);

        if (application is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteApplication()
    {
        DB.Application.Remove(application!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/applications");
    }
}
